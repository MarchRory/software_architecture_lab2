import{_ as e}from"./index-456cdcbe.js";import{c as r}from"./code-dd328b63.js";import{k as s,r as t,x as a,A as u,u as i,B as o,C as l}from"./@vue-2ad591fa.js";import"./highlight.js-9a6e1cb8.js";import"./vue-router-479caa42.js";import"./pinia-189d73a5.js";/* empty css                    */const m=s({__name:"index",setup(s){const m=l((()=>e((()=>import("./index-3892f9cf.js")),["assets/index-3892f9cf.js","assets/code-dd328b63.js","assets/useScroll-8ae1b7f1.js","assets/@vue-2ad591fa.js","assets/_plugin-vue_export-helper-1b428a4d.js","assets/index-87b9d052.css"]))),n=t({type:"管道-过滤器风格",introduce:"在管道/过滤器风格的软件体系结构中，每个构件都有一组输入和输出，构件读输入的数据流，经过内部处理，然后产生输出数据流。这个过程通常通过对输入流的变换及增量计算来完成，所以在输入被完全消费之前，输出便产生了。因此，这里的构件被称为过滤器，这种风格的连接件就象是数据流传输的管道，将一个过滤器的输出传到另一过滤器的输入。此风格特别重要的过滤器必须是独立的实体，它不能与其它的过滤器共享数据，而且一个过滤器不知道它上游和下游的标识。一个管道/过滤器网络输出的正确性并不依赖于过滤器进行增量计算过程的顺序。",summary:"一个步骤的输出是下一个步骤的输入。",imgurl:new URL("/software_architecture_lab2/assets/PipFilter-09eec58a.jpg",self.location).href,code:"",uml:new URL("/software_architecture_lab2/assets/uml-e189b376.png",self.location).href});return r().then((e=>{n.value.code=e.join("\n\n-----------------------------------\n\n")})),(e,r)=>(o(),a("div",null,[u(i(m),{type:n.value.type,introduce:n.value.introduce,summary:n.value.summary,imgurl:n.value.imgurl,code:n.value.code,uml:n.value.uml},null,8,["type","introduce","summary","imgurl","code","uml"])]))}});export{m as default};
